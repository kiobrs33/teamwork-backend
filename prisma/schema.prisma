// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Empleado {
  idEmpleado                    Int                         @id @default(autoincrement()) @map("id_empleado")
  nombres                       String
  apellidoPaterno               String                      @map("apellido_paterno")
  apellidoMaterno               String                      @map("apellido_materno")
  documento                     Int
  sede                          String
  tiempoEmpresaValor            Int                         @map("tiempo_empresa_valor")
  tiempoEmpresaUnidad           String                      @map("tiempo_empresa_unidad")
  idEmpresaEmpleadora           Int                         @map("id_empresa_empleadora")
  empresaEmpleadora             EmpresaEmpleadora           @relation(fields: [idEmpresaEmpleadora], references: [idEmpresaEmpleadora])
  idAreaEmpleadora              Int                         @map("id_equipo_empleadora")
  areaEmpleadora                AreaEmpleadora              @relation(fields: [idAreaEmpleadora], references: [idAreaEmpleadora])
  idPuestoEmpleadora            Int                         @map("id_puesto_empleadora")
  puestoEmpleadora              PuestoEmpleadora            @relation(fields: [idPuestoEmpleadora], references: [idPuestoEmpleadora])
  idGerenciaEmpleadora          Int                         @map("id_unidad_empleadora")
  gerenciaEmpleadora            GerenciaEmpleadora          @relation(fields: [idGerenciaEmpleadora], references: [idGerenciaEmpleadora])
  idUnidadOcupacionalEmpleadora Int                         @map("id_unidad_ocupacional_empleadora")
  unidadOcupacionalEmpleadora   UnidadOcupacionalEmpleadora @relation(fields: [idUnidadOcupacionalEmpleadora], references: [idUnidadOcupacionalEmpleadora])
  idUsuario                     Int                         @map("id_usuario")
  usuario                       Usuario                     @relation(fields: [idUsuario], references: [idUsuario])
  estado                        Boolean                     @default(true)
  creadoPorId                   Int                         @map("creado_por_id")
  actualizadoPorId              Int?                        @map("actualizado_por_id")
  fechaCreacion                 DateTime                    @default(now()) @map("fecha_creacion")
  fechaModificacion             DateTime?                   @map("fecha_modificacion")
  objetivo                      Objetivo[]

  @@map("empleado")
}

model Usuario {
  idUsuario         Int        @id @default(autoincrement()) @map("id_usuario")
  codigoUsuario     String     @map("codigo_usuario")
  contrasena        String
  rol               Rol        @default(EMPLEADO)
  estado            Boolean    @default(true)
  creadoPorId       Int?       @map("creado_por_id")
  actualizadoPorId  Int?       @map("actualizado_por_id")
  fechaCreacion     DateTime   @default(now()) @map("fecha_creacion")
  fechaModificacion DateTime?  @map("fecha_modificacion")
  empleado          Empleado[]

  @@map("usuario")
}

enum Rol {
  ADMIN
  SUBADMIN
  JEFE
  EMPLEADO

  @@map("rol")
}

model EmpresaEmpleadora {
  idEmpresaEmpleadora          Int                           @id @default(autoincrement()) @map("id_empresa_empleadora")
  nombreEmpresa                String                        @map("nombre_empresa")
  ruc                          String?
  direccionEmpresa             String?                       @map("direccion_empresa")
  urlLogo                      String                        @map("url_logo")
  modeloEmpresa                String
  cantidadObjetivos            String
  fechaVigenciaInicio          DateTime                      @map("fecha_vigencia_inicio")
  fechaVigenciaFin             DateTime                      @map("fecha_vigencia_fin")
  fechaVigenciaInicioObjetivo  DateTime?                     @map("fecha_vigencia_inicio_objetivo")
  fechaVigenciaFinObjetivo     DateTime?                     @map("fecha_vigencia_fin_objetivo")
  estado                       Boolean                       @default(true)
  creadoPorId                  Int                           @map("creado_por_id")
  actualizadoPorId             Int?                          @map("actualizado_por_id")
  fechaCreacion                DateTime                      @default(now()) @map("fecha_creacion")
  fechaModificacion            DateTime?                     @map("fecha_modificacion")
  areaEmpleadoras              AreaEmpleadora[]
  puestoEmpleadoras            PuestoEmpleadora[]
  gerenciaEmpleadoras          GerenciaEmpleadora[]
  empleados                    Empleado[]
  unidadOcupacionalEmpleadoras UnidadOcupacionalEmpleadora[]

  @@map("empresa_empleadora")
}

model AreaEmpleadora {
  idAreaEmpleadora    Int               @id @default(autoincrement()) @map("id_equipo_empleadora")
  descripcion         String
  idEmpresaEmpleadora Int               @map("id_empresa_empleadora")
  empresaEmpleadora   EmpresaEmpleadora @relation(fields: [idEmpresaEmpleadora], references: [idEmpresaEmpleadora])
  estado              Boolean           @default(true)
  creadoPorId         Int               @map("creado_por_id")
  actualizadoPorId    Int?              @map("actualizado_por_id")
  fechaCreacion       DateTime          @default(now()) @map("fecha_creacion")
  fechaModificacion   DateTime?         @map("fecha_modificacion")
  empleados           Empleado[]

  @@map("area_empleadora")
}

model PuestoEmpleadora {
  idPuestoEmpleadora  Int               @id @default(autoincrement()) @map("id_puesto_empleadora")
  descripcion         String
  idEmpresaEmpleadora Int               @map("id_empresa_empleadora")
  empresaEmpleadora   EmpresaEmpleadora @relation(fields: [idEmpresaEmpleadora], references: [idEmpresaEmpleadora])
  estado              Boolean           @default(true)
  creadoPorId         Int               @map("creado_por_id")
  actualizadoPorId    Int?              @map("actualizado_por_id")
  fechaCreacion       DateTime          @default(now()) @map("fecha_creacion")
  fechaModificacion   DateTime?         @map("fecha_modificacion")
  empleados           Empleado[]

  @@map("puesto_empleadora")
}

model GerenciaEmpleadora {
  idGerenciaEmpleadora Int               @id @default(autoincrement()) @map("id_unidad_empleadora")
  descripcion          String
  idEmpresaEmpleadora  Int               @map("id_empresa_empleadora")
  empresaEmpleadora    EmpresaEmpleadora @relation(fields: [idEmpresaEmpleadora], references: [idEmpresaEmpleadora])
  estado               Boolean           @default(true)
  creadoPorId          Int               @map("creado_por_id")
  actualizadoPorId     Int?              @map("actualizado_por_id")
  fechaCreacion        DateTime          @default(now()) @map("fecha_creacion")
  fechaModificacion    DateTime?         @map("fecha_modificacion")
  empleados            Empleado[]

  @@map("gerencia_empleadora")
}

model UnidadOcupacionalEmpleadora {
  idUnidadOcupacionalEmpleadora Int                                      @id @default(autoincrement()) @map("id_unidad_ocupacional_empleadora")
  descripcion                   String
  idEmpresaEmpleadora           Int                                      @map("id_empresa_empleadora")
  empresaEmpleadora             EmpresaEmpleadora                        @relation(fields: [idEmpresaEmpleadora], references: [idEmpresaEmpleadora])
  estado                        Boolean                                  @default(true)
  creadoPorId                   Int                                      @map("creado_por_id")
  actualizadoPorId              Int?                                     @map("actualizado_por_id")
  fechaCreacion                 DateTime                                 @default(now()) @map("fecha_creacion")
  fechaModificacion             DateTime?                                @map("fecha_modificacion")
  empleados                     Empleado[]
  competencias                  UnidadOcupacionalEmpleadoraCompetencia[]

  @@map("unidad_ocupacional_empleadora")
}

model Objetivo {
  idObjetivo        Int               @id @default(autoincrement()) @map("id_objetivo")
  idEmpleado        Int               @map("id_empleado")
  empleado          Empleado          @relation(fields: [idEmpleado], references: [idEmpleado])
  estado            Boolean           @default(true)
  creadoPorId       Int               @map("creado_por_id")
  actualizadoPorId  Int?              @map("actualizado_por_id")
  fechaCreacion     DateTime          @default(now()) @map("fecha_creacion")
  fechaModificacion DateTime?         @map("fecha_modificacion")
  objetivoDetalles  ObjetivoDetalle[]

  @@map("objetivo")
}

model ObjetivoDetalle {
  idObjetivoDetalle     Int       @id @default(autoincrement()) @map("id_objetivo_detalle")
  idObjetivo            Int       @map("id_objetivo")
  objetivo              Objetivo  @relation(fields: [idObjetivo], references: [idObjetivo])
  secuencial            Int
  descripcion           String
  descripcionIniciativa String    @map("descripcion_iniciativa")
  unidadMedida          String    @map("unidad_medida")
  pesoEspecifico        Float     @map("peso_especifico")
  metaObjetivo          Float     @map("meta_objetivo")
  metaAlcanzada         Float?    @map("meta_alcanzada")
  estado                Boolean   @default(true)
  creadoPorId           Int       @map("creado_por_id")
  actualizadoPorId      Int?      @map("actualizado_por_id")
  fechaCreacion         DateTime  @default(now()) @map("fecha_creacion")
  fechaModificacion     DateTime? @map("fecha_modificacion")

  @@map("objetivo_detalle")
}

model Competencia {
  idCompetencia         Int                                      @id @default(autoincrement()) @map("id_competencia")
  codigo                String
  titulo                String
  nivel                 Int
  estado                Boolean                                  @default(true)
  creadoPorId           Int                                      @map("creado_por_id")
  actualizadoPorId      Int?                                     @map("actualizado_por_id")
  fechaCreacion         DateTime                                 @default(now()) @map("fecha_creacion")
  fechaModificacion     DateTime?                                @map("fecha_modificacion")
  competenciaDetalles   CompetenciaDetalle[]
  unidadesOcupacionales UnidadOcupacionalEmpleadoraCompetencia[]

  @@map("competencia")
}

model CompetenciaDetalle {
  idCompetenciaDetalle Int         @id @default(autoincrement()) @map("id_competencia_detalle")
  idCompetencia        Int         @map("id_competencia")
  secuencial           Int
  competencia          Competencia @relation(fields: [idCompetencia], references: [idCompetencia])
  descripcion          String
  estado               Boolean     @default(true)
  creadoPorId          Int         @map("creado_por_id")
  actualizadoPorId     Int?        @map("actualizado_por_id")
  fechaCreacion        DateTime    @default(now()) @map("fecha_creacion")
  fechaModificacion    DateTime?   @map("fecha_modificacion")

  @@map("competencia_detalle")
}

model UnidadOcupacionalEmpleadoraCompetencia {
  idUnidadOcupacionalEmpleadora Int
  idCompetencia                 Int
  estado                        Boolean                     @default(true)
  creadoPorId                   Int                         @map("creado_por_id")
  actualizadoPorId              Int?                        @map("actualizado_por_id")
  fechaCreacion                 DateTime                    @default(now()) @map("fecha_creacion")
  fechaModificacion             DateTime?                   @map("fecha_modificacion")
  unidadOcupacionalEmpleadora   UnidadOcupacionalEmpleadora @relation(fields: [idUnidadOcupacionalEmpleadora], references: [idUnidadOcupacionalEmpleadora])
  competencia                   Competencia                 @relation(fields: [idCompetencia], references: [idCompetencia])

  @@id([idUnidadOcupacionalEmpleadora, idCompetencia])
  @@map("unidad_ocupacional_empleadora_competencia")
}

model TablaMaestra {
  idTablaMaestra      Int                   @id @default(autoincrement()) @map("id_tabla_maestra")
  descripcion         String?
  estado              Boolean               @default(true)
  creadoPorId         Int                   @map("creado_por_id")
  actualizadoPorId    Int?                  @map("actualizado_por_id")
  fechaCreacion       DateTime              @default(now()) @map("fecha_creacion")
  fechaModificacion   DateTime?             @map("fecha_modificacion")
  TablaMaestraDetalle TablaMaestraDetalle[]

  @@map("tabla_maestra")
}

model TablaMaestraDetalle {
  idTablaMaestraDetalle Int          @id @default(autoincrement()) @map("id_tabla_maestra_detalle")
  descripcion           String?
  valor                 String?
  idTablaMaestra        Int          @map("id_tabla_maestra")
  tablaMaestra          TablaMaestra @relation(fields: [idTablaMaestra], references: [idTablaMaestra])
  estado                Boolean      @default(true)
  creadoPorId           Int          @map("creado_por_id")
  actualizadoPorId      Int?         @map("actualizado_por_id")
  fechaCreacion         DateTime     @default(now()) @map("fecha_creacion")
  fechaModificacion     DateTime?    @map("fecha_modificacion")

  @@map("tabla_maestra_detalle")
}

model Empleo {
  idEmpleo            Int          @id @default(autoincrement()) @map("id_empleo")
  titulo              String
  descripcion         String?
  nombreEmpresa       String       @map("nombre_empresa")
  ubicacion           String
  tipoEmpleo          String       @map("tipo_empleo")
  modalidad           String?
  fechaPublicacion    DateTime     @map("fecha_publicacion")
  fechaFinPublicacion DateTime     @map("fecha_fin_publicacion")
  tiempoExperiencia   String       @map("tiempo_experiencia")
  numeroVacantes      String       @map("numero_vacantes")
  salario             String?
  estado              Boolean      @default(true)
  creadoPorId         Int          @map("creado_por_id")
  actualizadoPorId    Int?         @map("actualizado_por_id")
  fechaCreacion       DateTime     @default(now()) @map("fecha_creacion")
  fechaModificacion   DateTime?    @map("fecha_modificacion")
  comunicados         Comunicado[]

  @@map("empleo")
}

model Comunicado {
  idComunicado      Int       @id @default(autoincrement()) @map("id_comunicado")
  titulo            String
  url               String?
  estadoDisponible  Boolean   @default(true) @map("estado_disponible")
  idEmpleo          Int       @map("id_empleo")
  empleo            Empleo    @relation(fields: [idEmpleo], references: [idEmpleo])
  estado            Boolean   @default(true)
  creadoPorId       Int       @map("creado_por_id")
  actualizadoPorId  Int?      @map("actualizado_por_id")
  fechaCreacion     DateTime  @default(now()) @map("fecha_creacion")
  fechaModificacion DateTime? @map("fecha_modificacion")

  @@map("comunicado")
}
