// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Empleado {
  idEmpleado        Int        @id @default(autoincrement()) @map("employee_id")
  nombres           String?    @map("first_names")
  apellidos         String?    @map("last_names")
  estado            Boolean?   @default(false)
  creadoPorId       Int?       @map("creado_por_id")
  actualizadoPorId  Int?       @map("actualizado_por_id")
  fechaCreacion     DateTime   @default(now()) @map("fecha_creacion")
  fechaModificacion DateTime   @updatedAt @map("fecha_modificacion")
  objetivo          Objetivo[]

  @@map("empleado")
}

model Usuario {
  idUsuario         Int      @id @default(autoincrement()) @map("id_usuario")
  codigoUsuario     String?  @map("user_code")
  correoElectronico String?  @map("correo_electronico")
  contrasena        String?
  rol               Rol      @default(EMPLEADO)
  estado            Boolean? @default(false)
  creadoPorId       Int?     @map("creado_por_id")
  actualizadoPorId  Int?     @map("actualizado_por_id")
  fechaCreacion     DateTime @default(now()) @map("fecha_creacion")
  fechaModificacion DateTime @updatedAt @map("fecha_modificacion")

  @@map("usuario")
}

enum Rol {
  ADMIN
  EMPLEADO
}

model EmpresaEmpleadora {
  idEmpresaEmpleadora Int                @id @default(autoincrement()) @map("id_empresa_empleadora")
  nombreEmpresa       String?            @map("nombre_empresa")
  ruc                 String?            @map("ruc")
  direccionEmpresa    String?            @map("direccion_empresa")
  urlLogo             String?            @map("url_logo")
  fechaVigenciaInicio DateTime           @map("fecha_vigencia_inicio")
  fechaVigenciaFin    DateTime           @map("fecha_vigencia_fin")
  estado              Boolean?           @default(false)
  creadoPorId         Int?               @map("creado_por_id")
  actualizadoPorId    Int?               @map("actualizado_por_id")
  fechaCreacion       DateTime           @default(now()) @map("fecha_creacion")
  fechaModificacion   DateTime           @updatedAt @map("fecha_modificacion")
  EquipoEmpleadora    EquipoEmpleadora[]
  PuestoEmpleadora    PuestoEmpleadora[]
  UnidadEmpleadora    UnidadEmpleadora[]
  Objetivo            Objetivo[]

  @@map("empresa_empleadora")
}

model EquipoEmpleadora {
  idEquipoEmpleadora  Int               @id @default(autoincrement()) @map("employer_team_id")
  descripcion         String?
  idEmpresaEmpleadora Int
  empresaEmpleadora   EmpresaEmpleadora @relation(fields: [idEmpresaEmpleadora], references: [idEmpresaEmpleadora])
  estado              Boolean?          @default(false)
  creadoPorId         Int?              @map("creado_por_id")
  actualizadoPorId    Int?              @map("actualizado_por_id")
  fechaCreacion       DateTime          @default(now()) @map("fecha_creacion")
  fechaModificacion   DateTime          @updatedAt @map("fecha_modificacion")

  @@map("equipo_empleadora")
}

model PuestoEmpleadora {
  idPuestoEmpleadora  Int               @id @default(autoincrement()) @map("employer_position_id")
  descripcion         String?
  idEmpresaEmpleadora Int
  empresaEmpleadora   EmpresaEmpleadora @relation(fields: [idEmpresaEmpleadora], references: [idEmpresaEmpleadora])
  estado              Boolean?          @default(false)
  creadoPorId         Int?              @map("creado_por_id")
  actualizadoPorId    Int?              @map("actualizado_por_id")
  fechaCreacion       DateTime          @default(now()) @map("fecha_creacion")
  fechaModificacion   DateTime          @updatedAt @map("fecha_modificacion")

  @@map("puesto_empleadora")
}

model UnidadEmpleadora {
  unidadEmpleadoraId  Int               @id @default(autoincrement()) @map("employer_unit_id")
  descripcion         String?
  idEmpresaEmpleadora Int
  empresaEmpleadora   EmpresaEmpleadora @relation(fields: [idEmpresaEmpleadora], references: [idEmpresaEmpleadora])
  estado              Boolean?          @default(false)
  creadoPorId         Int?              @map("creado_por_id")
  actualizadoPorId    Int?              @map("actualizado_por_id")
  fechaCreacion       DateTime          @default(now()) @map("fecha_creacion")
  fechaModificacion   DateTime          @updatedAt @map("fecha_modificacion")

  @@map("unidad_empleadora")
}

model Objetivo {
  objetivoId          Int               @id @default(autoincrement()) @map("objective_id")
  fechaVigenciaInicia DateTime
  fechaVigenciaFin    DateTime
  idEmpresaEmpleadora Int
  empresaEmpleadora   EmpresaEmpleadora @relation(fields: [idEmpresaEmpleadora], references: [idEmpresaEmpleadora])
  idEmpleado          Int
  empleado            Empleado          @relation(fields: [idEmpleado], references: [idEmpleado])
  estado              Boolean?          @default(false)
  creadoPorId         Int?              @map("creado_por_id")
  actualizadoPorId    Int?              @map("actualizado_por_id")
  fechaCreacion       DateTime          @default(now()) @map("fecha_creacion")
  fechaModificacion   DateTime          @updatedAt @map("fecha_modificacion")
  ObjetivoDetalle     ObjetivoDetalle[]

  @@map("objetivo")
}

model ObjetivoDetalle {
  objetivoDetalleId     Int      @id @default(autoincrement()) @map("objective_detail_id")
  descripcion           String?
  descripcionIniciativa String?  @map("descripcion_iniciativa")
  unidadMedida          String?  @map("unidad_medida")
  pesoEspecifico        Float?   @map("peso_especifico")
  idObjetivo            Int
  objetivo              Objetivo @relation(fields: [idObjetivo], references: [objetivoId])
  estado                Boolean? @default(false)
  creadoPorId           Int?     @map("creado_por_id")
  actualizadoPorId      Int?     @map("actualizado_por_id")
  fechaCreacion         DateTime @default(now()) @map("fecha_creacion")
  fechaModificacion     DateTime @updatedAt @map("fecha_modificacion")

  @@map("objetivo_detalle")
}

model TablaMaestra {
  tablaMaestraId      Int                   @id @default(autoincrement()) @map("master_table_id")
  descripcion         String?
  estado              Boolean?              @default(false)
  creadoPorId         Int?                  @map("creado_por_id")
  actualizadoPorId    Int?                  @map("actualizado_por_id")
  fechaCreacion       DateTime              @default(now()) @map("fecha_creacion")
  fechaModificacion   DateTime              @updatedAt @map("fecha_modificacion")
  TablaMaestraDetalle TablaMaestraDetalle[]

  @@map("tabla_maestra")
}

model TablaMaestraDetalle {
  tablaMaestraDetalleId Int          @id @default(autoincrement()) @map("master_table_detail_id")
  descripcion           String?
  valor                 String?
  idTablaMaestra        Int
  tablaMaestra          TablaMaestra @relation(fields: [idTablaMaestra], references: [tablaMaestraId])
  estado                Boolean?     @default(false)
  creadoPorId           Int?         @map("creado_por_id")
  actualizadoPorId      Int?         @map("actualizado_por_id")
  fechaCreacion         DateTime     @default(now()) @map("fecha_creacion")
  fechaModificacion     DateTime     @updatedAt @map("fecha_modificacion")

  @@map("tabla_maestra_detalle")
}
